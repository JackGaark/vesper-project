<div class="navbar-wagon" hidden>
  <!-- Logo -->
  <% if user_signed_in? %>
  <div class="navbar-wagon-item">
    <div class="dropdown">
      <div class="navbar-wagon-brand dropdown-toggle glo-up-nav" id="navbar-wagon-menu" data-toggle="dropdown">
      V </div>
      <ul class="dropdown-menu dropdown-menu-right navbar-wagon-dropdown-menu">
        <li>
          <%= link_to "/" do %>
          <i class="fas fa-home"></i> <%= t(".profile", default: "Home") %>
          <% end %>
        </li>
        <li>
          <%= link_to "#" do %>
          <i class="fa fa-user"></i> <%= t(".profile", default: "Profile") %>
          <% end %>
        </li>
        <li>
          <%= link_to "#" do %>
          <i class="fa fa-cog"></i>  <%= t(".settings", default: "Settings") %>
          <% end %>
        </li>
        <li>
          <%= link_to destroy_user_session_path, method: :delete do %>
          <i class="fa fa-sign-out"></i>  <%= t(".sign_out", default: "Log out") %>
          <% end %>
        </li>
      </ul>
    </div>
  </div>
  <% else %>


  <% link_to root_path, class: "navbar-wagon-brand" do %>
  V
  <% end %>

  <% end %>

  <div class="navbar-wagon-right">
        <% if user_signed_in? %>


    <!-- Right Navigation -->
      <% unless @searchBar.nil? %>



    <!-- Expandable Textfield -->
    <!-- Design inspired by: https://dribbble.com/shots/1992789 -->
    <div class="search-bar" style="padding-top: 28px; padding-right: 30px;">
      <form>
        <input id="search-bar-input" type="text" />
        <div class="after"></div>
        <input type="submit" />
      </form>
      <h4>&nbsp;</h4>
    </div>








      <% end %>





    <div class="display-task-message">

    </div>

    <!-- Links when logged in -->

    <%# link_to "Messages", "#", class: "navbar-wagon-item navbar-wagon-link", style:"visbility: hidden" %>

    <!-- Avatar with dropdown menu -->
    <!-- <div class="navbar-wagon-item"> -->
        <div element-handle="1"   class=" hidden-xs navbar-wagon-brand progress-nav medium">1</div>
        <div element-handle="2"   class=" hidden-xs navbar-wagon-brand progress-nav medium">2</div>
        <div element-handle="3"   class=" hidden-xs navbar-wagon-brand progress-nav medium">3</div>
        <div element-handle="3.1" class=" hidden-xs navbar-wagon-brand progress-nav small"></div>
        <div element-handle="4"   class=" hidden-xs navbar-wagon-brand progress-nav medium">4</div>
        <div element-handle="4.1" class=" hidden-xs navbar-wagon-brand progress-nav small"></div>
    <!-- </div> -->
    <% else %>
    <!-- Login link (when logged out) -->
    <%= link_to t(".sign_in", default: "Login"), new_user_session_path, class: "navbar-wagon-item navbar-wagon-link" %>
    <% end %>
  </div>

  <!-- Dropdown list appearing on mobile only -->

</div>


<script>

function getKeyByValue(object, value) {
  return Object.keys(object).find(key => object[key] === value);
}

document.addEventListener("DOMContentLoaded", function(event) {
  const displayTaskMessage = document.querySelector('.display-task-message');
  const location = window.location.href
  const pages = {
                 1: /\/venue$/,
                 2: /\/squad\/[0-9]{1,}\/sidekicks$/,
                 3: /\/squad\/[0-9]{1,}\/[0-9]{1,}\/choosevenue$/,
                 4: /\/squad\/[0-9]{1,}\/[0-9]{1,}\/choosecontribution$/
                }

  const instructions = {
                        1: 'Select 3 venues',
                        2: 'Invite your friends',
                        3: 'Vote for your favorite venue',
                        3.1: 'Wait for your friends to vote',
                        4: 'Choose your contribution amount',
                        4.1: 'Wait for the your friends to contribute',
                        5: 'PARTY TIME'
                        }

  // console.log(pages.values());
  var keys = Object.keys(pages);
  var values = Object.values(pages);


  values.some((value) => {
    const matchingEl = document.querySelector(`[element-handle="${getKeyByValue(pages, value)}"]`);
    const currentKey = getKeyByValue(pages, value);

    if (currentKey > 3) {
      if (document.querySelector(`[element-handle="3.1"]`)) {
        document.querySelector(`[element-handle="3.1"]`).classList.add('done');
      }
    }

    if (location.match(value)) {
      if (displayTaskMessage) {
        displayTaskMessage.innerHTML = instructions[currentKey]
      }
      setTimeout((event) => {
      console.log('we matched the value');
      if (matchingEl) {
        matchingEl.classList.add('current');
      }
      }, 400);

      return true;
    } else {
      setTimeout((event) => {
        if (matchingEl) {
          matchingEl.classList.add('done');
        }
      }, 50);
    }

  });

});

document.addEventListener('DOMContentLoaded', (event) => {

const venues = document.querySelectorAll('.col-xs-12.col-sm-6.col-md-4 .blog-card.mdl-shadow--2dp');
const searchBar = document.getElementById('search-bar-input');

const filterResultsVenues = () => {

    const searchValue = searchBar.value.toLowerCase();

    // console.log(venues);
    venues.forEach((venue) => {
      const venueName = venue.attributes['data-venue-name'].value.toLowerCase();
      if (venueName.indexOf(searchValue) !== -1) {
        if (venue.classList.contains('chosen-venue-card')) {
          console.log('card is chosen, we cant remove it');
        } else {
          venue.parentElement.classList.remove('hidden');
        }

      } else {
        if (venue.classList.contains('chosen-venue-card')) {
          console.log('card is chosen, we cant remove it');
        } else {
          venue.parentElement.classList.add('hidden');
        }
      }
    });

    console.log(searchValue);
}


const friends = document.querySelectorAll('.squadmember-list-container');

const filterResultsFriends = () => {

    const searchValue = searchBar.value.toLowerCase();

    // console.log(venues);
    friends.forEach((friend) => {
      const friendName = friend.attributes['data-friend-name'].value.toLowerCase();
      if (friendName.indexOf(searchValue) !== -1) {
        friend.classList.remove('hidden');
      } else {
        friend.classList.add('hidden');
      }
    });

    console.log(searchValue);
}


  if (searchBar) {
    searchBar.addEventListener('input', (event) => {
      if (window.location.href.match(/\/venue$/)) {
        filterResultsVenues();
      } else {
        filterResultsFriends();
      }
    });





// document.addEventListener("DOMContentLoaded", function(event) {
  // EXPERIMENTING WITH THE SEARCHBAR

  var s = $('input'),
      f  = $('form'),
      a = $('.after'),
      m = $('h4');

  s.focus(function(){
    if( f.hasClass('open') ) return;
    f.addClass('in');
    setTimeout(function(){
      f.addClass('open');
      f.removeClass('in');
    }, 1300);
  });

  a.on('click', function(e){
    e.preventDefault();
    if( !f.hasClass('open') ) return;
     s.val('');
    f.addClass('close');
    f.removeClass('open');
    setTimeout(function(){
      f.removeClass('close');
    }, 1300);
  })

  f.submit(function(e){
    e.preventDefault();
    m.html('Thanks, high five!').addClass('show');
    f.addClass('explode');
    setTimeout(function(){
      s.val('');
      f.removeClass('explode');
      m.removeClass('show');
    }, 3000);
  })

  $(document).mouseup(function(e)
  {
      var container = $(".search-bar");
      // var container2 = $

      // if the target of the click isn't the container nor a descendant of the container
      if (!container.is(e.target) && container.has(e.target).length === 0)
      {
        if (f.hasClass('open')) {
          s.val('');
          // s.trigger('input');
          if (window.location.href.match(/\/venue$/)) {
            filterResultsVenues();
          } else {
            filterResultsFriends();
          };
          // var event = new Event('input');
          // s.dispatchEvent(event);

          f.addClass('close');
          f.removeClass('open');
          setTimeout(function(){
            f.removeClass('close');
          }, 1300);
        }
      }
  });
  };
});
</script>
